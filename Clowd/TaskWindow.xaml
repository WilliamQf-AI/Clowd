<Window x:Class="Clowd.TaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Clowd"
        xmlns:controls="clr-namespace:Clowd.Controls"
        xmlns:math="clr-namespace:IKriv.Wpf"
        xmlns:conv="clr-namespace:Clowd.Converters"
        xmlns:util="clr-namespace:Clowd.Utilities"
        xmlns:eim="clr-namespace:Microsoft.Expression.Interactivity.Media;assembly=Microsoft.Expression.Interactions"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        DataContext="{Binding RelativeSource={RelativeSource Self}}" Topmost="True"
        mc:Ignorable="d" ResizeMode="NoResize" ShowInTaskbar="False" BorderThickness="0" SnapsToDevicePixels="True" 
        Title="ClTaskWindow" Height="30" Width="240" WindowStyle="None" MinWidth="240" MinHeight="1" AllowsTransparency="True"
        ShowActivated="False" Background="Transparent">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate x:Key="CopyIconTemplate">
                <Grid>
                    <Viewbox Margin="5">
                        <Path Fill="Black" Opacity="0.8" Width="26" Height="26"  Data="{StaticResource IconCopy26}" />
                    </Viewbox>
                </Grid>
            </DataTemplate>
            <RoutedUICommand x:Key="Commands.Minimize" Text="Hide"/>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{StaticResource Commands.Minimize}" />
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource Commands.Minimize}" Executed="MinimizeExecuted" />
    </Window.CommandBindings>
    <Canvas ClipToBounds="True">
        <Grid Name="containerGrid" Canvas.Left="0" Canvas.Top="0" Width="240">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <controls:CornerClippingBorder Background="{DynamicResource AccentColorBrush}" BorderBrush="{DynamicResource AccentColorBrush}" 
                    BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" ClipToBounds="True">
                <ProgressBar Height="NaN" Background="Transparent" Value="{Binding OverallProgress, Mode=OneWay}" 
                         Foreground="#22FFFFFF" BorderThickness="0" Opacity="1"/>
            </controls:CornerClippingBorder>
            <Grid Name="headerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter ContentTemplate="{StaticResource MetroIconTemplate}" />
                <TextBlock Grid.Column="1" Foreground="{DynamicResource IdealForegroundColorBrush}" 
                       VerticalAlignment="Center" Text="CLOWD"/>
                <Button Grid.Column="2" Style="{StaticResource ToolButtonStyle}" Padding="3" Command="{StaticResource Commands.Minimize}" ToolTip="Hide">
                    <Viewbox>
                        <Path Fill="White" Height="32" Width="32" Data="{StaticResource IconExpandDown32}" />
                    </Viewbox>
                </Button>
            </Grid>
            <Rectangle Fill="White" Grid.Row="1" />
            <ItemsControl Name="taskBox" Grid.Row="1" MinHeight="30" Margin="10,10,10,5" ItemsSource="{Binding TaskList, Mode=OneWay}">
                <ItemsControl.Resources>
                    <conv:ValueConverterGroup x:Key="progToVis">
                        <conv:IsEqualOrGreaterThanConverter />
                        <conv:BoolToVisibilityConverter2 />
                    </conv:ValueConverterGroup>
                    <conv:ValueConverterGroup x:Key="progToInverseVis">
                        <conv:IsEqualOrGreaterThanConverter />
                        <conv:BoolToInverseConverter />
                        <conv:BoolToVisibilityConverter2 />
                    </conv:ValueConverterGroup>
                    <conv:BoolToVisibilityConverter2 x:Key="bool2vis" />
                    <ContextMenu x:Key="itemMenu">
                        <MenuItem Header="Open" Command="{Binding OpenCommand}" CommandParameter="{Binding}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource bool2vis}}" />
                        <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource bool2vis}}"/>
                        <MenuItem Header="Email" Command="{Binding EmailCommand}" CommandParameter="{Binding}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource bool2vis}}"/>
                        <!--<Separator />-->
                        <MenuItem Header="Edit" Command="{Binding EditCommand}" CommandParameter="{Binding}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource bool2vis}}"/>
                        <MenuItem Header="Cancel" Command="{Binding CancelCommand}" CommandParameter="{Binding}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource bool2vis}}"/>
                    </ContextMenu>
                    <Storyboard x:Key="ItemEnterAnimation" AutoReverse="False">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="container" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="container" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" From="-30" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </ItemsControl.Resources>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded" >
                                <BeginStoryboard Storyboard="{StaticResource ItemEnterAnimation}" />
                            </EventTrigger>
                        </DataTemplate.Triggers>
                        <Grid x:Name="container" Height="30" Background="White" Margin="0,0,0,5" ClipToBounds="True" 
                              ContextMenu="{StaticResource itemMenu}" RenderTransformOrigin="0.5,0">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Padding="5" Background="{Binding ProgressBrush}">
                                <Canvas>
                                    <Viewbox Width="20" Height="20" Visibility="{Binding Progress, Converter={StaticResource progToInverseVis}}">
                                        <controls:ProgressRing Foreground="Black" Opacity=".8" IsActive="True" Style="{StaticResource ChasingDotsProgressRingStyle}" />
                                    </Viewbox>
                                    <Image Width="20" Height="20" Source="Images/Checkmark-26.png" Visibility="{Binding Progress, Converter={StaticResource progToVis}}"/>
                                </Canvas>
                            </Border>
                            <ProgressBar Grid.Column="2" Grid.ColumnSpan="4" Value="{Binding Progress}" Background="#22FFFFFF" 
                                         Height="NaN" BorderThickness="0">
                                <ProgressBar.Resources>
                                    <SolidColorBrush x:Key="ProgressBrush" Color="{Binding ProgressColor}" />
                                </ProgressBar.Resources>
                            </ProgressBar>
                            <Grid HorizontalAlignment="Stretch" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="1" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock FontWeight="Bold" VerticalAlignment="Bottom" FontSize="11" Margin="10,0,0,-2" Opacity="0.7" Text="{Binding PrimaryText}" />
                                <TextBlock Grid.Row="2" Opacity="0.6" FontSize="9" Margin="10,0,0,0" VerticalAlignment="Top" Text="{Binding SecondaryText}" />
                                <TextBlock Grid.Column="1" Opacity="0.6" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding ProgressCurrentText}" />
                                <Rectangle Grid.Column="1" Grid.Row="1" Height="1" Width="20" VerticalAlignment="Center" Fill="Black" RenderOptions.EdgeMode="Aliased" Opacity="0.6" SnapsToDevicePixels="True" />
                                <TextBlock Grid.Column="1" Opacity="0.6" FontSize="8" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top" Text="{Binding ProgressTargetText}"/>
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </Style>
                                </Grid.Resources>
                            </Grid>
                            <Grid Grid.ColumnSpan="6">
                                <Border BorderBrush="White" BorderThickness="0,2,0,2" Width="10" Margin="26,8" HorizontalAlignment="Left" SnapsToDevicePixels="True" />
                                <Border BorderBrush="DarkGray" BorderThickness="0,0,1,1" Height="6" Width="6" VerticalAlignment="Bottom"  HorizontalAlignment="Right" SnapsToDevicePixels="True"/>
                                <Border BorderBrush="DarkGray" BorderThickness="0,1,1,0" Height="6" Width="6" VerticalAlignment="Top"  HorizontalAlignment="Right" SnapsToDevicePixels="True"/>
                                <Border BorderBrush="DarkGray" BorderThickness="1,1,0,0" Height="6" Width="6" VerticalAlignment="Top"  HorizontalAlignment="Left" SnapsToDevicePixels="True"/>
                                <Border BorderBrush="DarkGray" BorderThickness="1,0,0,1" Height="6" Width="6" VerticalAlignment="Bottom"  HorizontalAlignment="Left" SnapsToDevicePixels="True"/>
                            </Grid>
                            <Border Background="{Binding ProgressBrush}" Cursor="Hand" BorderBrush="DarkGray" Grid.ColumnSpan="6"
                                    Visibility="{Binding HeroAvailable, Converter={StaticResource bool2vis}}" BorderThickness="1" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding HeroCommand}" MouseAction="LeftClick" />
                                </Border.InputBindings>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Opacity" Value="0" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard FillBehavior="Stop">
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter Height="30" Width="30" ContentTemplate="{Binding HeroCommand.IconTemplate}" />
                                    <TextBlock Margin="10,0,0,0" Opacity="0.8" Foreground="Black" VerticalAlignment="Center" Text="{Binding HeroCommand.Text}"></TextBlock>
                                </StackPanel>
                            </Border>
                            <Border Background="{Binding ProgressBrush}" BorderBrush="DarkGray" Grid.ColumnSpan="6"
                                    Visibility="{Binding HeroAvailable, Converter={StaticResource bool2vis}}" BorderThickness="1" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True" Opacity="0"
                                    IsHitTestVisible="False" Name="copiedNotifier">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger SourceObject="{Binding}" EventName="Copied">
                                        <eim:ControlStoryboardAction ControlStoryboardOption="Play">
                                            <eim:ControlStoryboardAction.Storyboard>
                                                <Storyboard Storyboard.TargetProperty="Opacity" Storyboard.TargetName="copiedNotifier">
                                                    <DoubleAnimationUsingKeyFrames>
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1" />
                                                        <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </eim:ControlStoryboardAction.Storyboard>
                                        </eim:ControlStoryboardAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock Margin="40,0,0,0" Opacity="0.8" Foreground="Black" VerticalAlignment="Center" Text="Copied"></TextBlock>
                            </Border>
                            <Button Grid.Column="3" Style="{StaticResource ToolButtonStyle}" HorizontalAlignment="Right" 
                                    ContextMenu="{StaticResource itemMenu}" Background="#32400000">
                                <i:Interaction.Behaviors>
                                    <util:ButtonClickContextBehavior />
                                </i:Interaction.Behaviors>
                                <Viewbox Margin="2">
                                    <Path Fill="#CC000000" Height="26" Width="26" Data="{StaticResource IconMore26}" />
                                </Viewbox>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Rectangle Grid.Row="3" VerticalAlignment="Bottom" Height="10">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1" 
		                                 SpreadMethod="Pad" ColorInterpolationMode="SRgbLinearInterpolation" >
                        <GradientStop Color="#00FFFFFF" Offset="0" />
                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Border BorderThickness="1,0,1,0" BorderBrush="{DynamicResource AccentColorBrush}" Grid.Row="1" >
            </Border>
        </Grid>
    </Canvas>
</Window>

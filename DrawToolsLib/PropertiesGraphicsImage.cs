using System;
using System.Collections.Generic;
using System.Text;
using System.Windows.Input;
using System.Windows.Media;



namespace DrawToolsLib
{
    public class PropertiesGraphicsImage : PropertiesGraphicsBase
    {
        private double left;
        private double top;
        private double right;
        private double bottom;
        private double lineWidth;
        private Color objectColor;
        private string fileName;

        public PropertiesGraphicsImage()
        {

        }

        public PropertiesGraphicsImage(GraphicsImage image)
        {
            if (image == null)
            {
                throw new ArgumentNullException("image");
            }

            left = image.Left;
            top = image.Top;
            right = image.Right;
            bottom = image.Bottom;

            lineWidth = image.LineWidth;
            objectColor = image.ObjectColor;
            actualScale = image.ActualScale;
            ID = image.Id;
            selected = image.IsSelected;
            fileName = image.FileName;
        }

        public override GraphicsBase CreateGraphics()
        {
            GraphicsBase b = new GraphicsImage(fileName, left, top, right, bottom, lineWidth, objectColor, actualScale);

            // GraphicsBase contains new ID generated by constructor.
            // This is OK if this instance is loaded from XML file.
            // But if this instance is part of commands history,
            // it contains ID which should be set in GraphicsBase.
            // This rule is applied to all SerializedGraphicsBase-derived
            // classes.

            if (this.ID != 0)       // from command history, not from file
            {
                b.Id = this.ID;
                b.IsSelected = this.selected;
            }

            return b;

        }

        #region Properties

        public string FileName
        {
            get { return fileName; }
            set { fileName = value; }
        }

        public double Left
        {
            get { return left; }
            set { left = value; }
        }

        public double Top
        {
            get { return top; }
            set { top = value; }
        }

        public double Right
        {
            get { return right; }
            set { right = value; }
        }

        public double Bottom
        {
            get { return bottom; }
            set { bottom = value; }
        }


        public double LineWidth
        {
            get { return lineWidth; }
            set { lineWidth = value; }
        }

        public Color ObjectColor
        {
            get { return objectColor; }
            set { objectColor = value; }
        }

        #endregion Properties

    }
}

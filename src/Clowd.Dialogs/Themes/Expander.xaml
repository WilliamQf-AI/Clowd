<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="{StaticResource ControlsFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource ControlsFontWeight}" />
        <Setter Property="FontFamily" Value="{StaticResource ControlsFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Background" Value="{DynamicResource ButtonOuterBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonOuterBorder}" />
        <Setter Property="BorderThickness" Value="{StaticResource ControlsBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource ControlsPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="OutterBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="InnerBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{DynamicResource ButtonInnerBackground}"
                            BorderBrush="{DynamicResource GroupBoxInnerBorder}"
                            BorderThickness="0">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    x:Name="Arrow"
                                    Width="12"
                                    Height="7"
                                    Margin="{StaticResource ControlsPadding}"
                                    HorizontalAlignment="Right"
                                    Data="F1 M 0.500012,0.659958L 8.28963,8.49903L 16.498,0.500034"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    Stroke="{TemplateBinding Foreground}"
                                    StrokeLineJoin="Miter">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,4,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HoverButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource HoverButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource HoverButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource HoverButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PressedButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PressedButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource DisabledButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource DisabledButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ExpanderRightHeaderStyle"
        BasedOn="{StaticResource ExpanderDownHeaderStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="OutterBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border.LayoutTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90" />
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Border.LayoutTransform>
                        <Border
                            x:Name="InnerBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{DynamicResource ButtonInnerBackground}"
                            BorderBrush="{DynamicResource GroupBoxInnerBorder}"
                            BorderThickness="0">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    x:Name="Arrow"
                                    Width="12"
                                    Height="7"
                                    Margin="{StaticResource ControlsPadding}"
                                    HorizontalAlignment="Right"
                                    Data="F1 M 0.500012,0.659958L 8.28963,8.49903L 16.498,0.500034"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    Stroke="{TemplateBinding Foreground}"
                                    StrokeLineJoin="Miter">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,4,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HoverButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource HoverButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource HoverButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource HoverButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PressedButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PressedButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource DisabledButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource DisabledButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ExpanderUpHeaderStyle"
        BasedOn="{StaticResource ExpanderDownHeaderStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="OutterBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="InnerBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{DynamicResource ButtonInnerBackground}"
                            BorderBrush="{DynamicResource GroupBoxInnerBorder}"
                            BorderThickness="0">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    x:Name="Arrow"
                                    Width="12"
                                    Height="7"
                                    Margin="{StaticResource ControlsPadding}"
                                    HorizontalAlignment="Right"
                                    Data="F1 M 0.500012,0.659958L 8.28963,8.49903L 16.498,0.500034"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    Stroke="{TemplateBinding Foreground}"
                                    StrokeLineJoin="Miter">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,4,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HoverButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource HoverButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource HoverButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource HoverButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PressedButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PressedButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource DisabledButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource DisabledButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource GroupBoxHeaderOuterBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource GroupBoxOuterBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="OutterBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border.LayoutTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90" />
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Border.LayoutTransform>
                        <Border
                            x:Name="InnerBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{DynamicResource ButtonInnerBackground}"
                            BorderBrush="{DynamicResource GroupBoxInnerBorder}"
                            BorderThickness="0">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    x:Name="Arrow"
                                    Width="12"
                                    Height="7"
                                    Margin="{StaticResource ControlsPadding}"
                                    HorizontalAlignment="Right"
                                    Data="F1 M 0.500012,0.659958L 8.28963,8.49903L 16.498,0.500034"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    Stroke="{TemplateBinding Foreground}"
                                    StrokeLineJoin="Miter">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,4,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HoverButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource HoverButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource HoverButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource HoverButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PressedButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PressedButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledButtonOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledButtonOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource DisabledButtonInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource DisabledButtonInnerBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Background" Value="{DynamicResource GroupBoxOuterBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource GroupBoxOuterBorder}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel Margin="1,-1,1,1">
                        <ToggleButton
                            x:Name="HeaderSite"
                            MinWidth="0"
                            MinHeight="0"
                            Margin="1"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            DockPanel.Dock="Top"
                            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpanderDownHeaderStyle}" />
                        <Border
                            x:Name="OuterBorder"
                            Margin="1,-1,1,1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,4,4"
                            SnapsToDevicePixels="true"
                            Visibility="Collapsed">
                            <Border
                                x:Name="InnerBorder"
                                Margin="1,-1,1,1"
                                Background="{DynamicResource GroupBoxInnerBackground}"
                                BorderBrush="{DynamicResource GroupBoxInnerBorder}"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,3,3">
                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false" />
                            </Border>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="OuterBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="0,4,4,0" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="0,3,3,0" />
                            <Setter TargetName="OuterBorder" Property="Margin" Value="-1,1,1,1" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="4,4,0,0" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="3,3,0,0" />
                            <Setter TargetName="OuterBorder" Property="Margin" Value="1,1,1,-1" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="4,0,0,4" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="3,0,0,3" />
                            <Setter TargetName="OuterBorder" Property="Margin" Value="1,1,-1,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledButtonForeground}" />
                            <Setter Property="Background" Value="{DynamicResource DisabledGroupBoxOuterBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledGroupBoxOuterBorder}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource DisabledGroupBoxInnerBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource DisabledGroupBoxInnerBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
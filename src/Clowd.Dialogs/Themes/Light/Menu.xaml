<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultMenu" TargetType="{x:Type Menu}">
        <Setter Property="FontSize" Value="{StaticResource ControlsFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource ControlsFontWeight}" />
        <Setter Property="FontFamily" Value="{StaticResource ControlsFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
        <Setter Property="Background" Value="{StaticResource MenuBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorder}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,1"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type Menu}"
        BasedOn="{StaticResource DefaultMenu}"
        TargetType="Menu" />


    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Style
        x:Key="MenuScrollButton"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                        <Rectangle
                            x:Name="R1"
                            Width="1"
                            DockPanel.Dock="Right"
                            Fill="Transparent" />
                        <Rectangle
                            x:Name="B1"
                            Height="1"
                            DockPanel.Dock="Bottom"
                            Fill="Transparent" />
                        <Rectangle
                            x:Name="L1"
                            Width="1"
                            DockPanel.Dock="Left"
                            Fill="Transparent" />
                        <Rectangle
                            x:Name="T1"
                            Height="1"
                            DockPanel.Dock="Top"
                            Fill="Transparent" />
                        <ContentPresenter
                            x:Name="ContentContainer"
                            Margin="2,2,2,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="R1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="B1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="L1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="T1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Style
        x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer,
                                     TypeInTargetAssembly={x:Type FrameworkElement}}"
        BasedOn="{x:Null}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton
                            Grid.Row="0"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="0"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                        <RepeatButton
                            Grid.Row="2"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="100"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Border
                x:Name="OuterBorder"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{StaticResource ControlsBorderThickness}"
                SnapsToDevicePixels="True">
                <DockPanel>
                    <ContentPresenter
                        x:Name="Icon"
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Path
                        x:Name="GlyphPanel"
                        Width="12"
                        Height="12"
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        Data="{StaticResource Checkmark}"
                        Fill="{TemplateBinding Foreground}"
                        FlowDirection="LeftToRight"
                        Stretch="Uniform"
                        Visibility="Collapsed" />
                    <ContentPresenter
                        Margin="5,0,5,0"
                        ContentSource="Header"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource KeyBoardFocusMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource KeyBoardFocusMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource KeyBoardFocusMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter TargetName="Icon" Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Border
                x:Name="OuterBorder"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{StaticResource ControlsBorderThickness}"
                SnapsToDevicePixels="True">
                <DockPanel>
                    <ContentPresenter
                        x:Name="Icon"
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Path
                        x:Name="GlyphPanel"
                        Width="12"
                        Height="12"
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        Data="{StaticResource Checkmark}"
                        Fill="{TemplateBinding Foreground}"
                        FlowDirection="LeftToRight"
                        Stretch="UniformToFill"
                        Visibility="Collapsed" />
                    <ContentPresenter
                        Margin="5,0,5,0"
                        ContentSource="Header"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </DockPanel>
            </Border>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Focusable="false"
                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Border x:Name="Shdw" Style="{StaticResource PopUpMenuBorderStyle}">
                    <ContentControl
                        x:Name="SubGroupBoxOuterBorder"
                        IsTabStop="false"
                        Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent,
                                                                         TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ScrollViewer CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter
                                Margin="2"
                                Grid.IsSharedSizeScope="true"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                KeyboardNavigation.TabNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </ContentControl>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource KeyBoardFocusMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource KeyBoardFocusMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource KeyBoardFocusMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter TargetName="Icon" Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter Property="Background" Value="{StaticResource SubMenuOpenMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource SubMenuOpenMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource SubMenuOpenMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter TargetName="Icon" Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Border
                x:Name="OuterBorder"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{StaticResource ControlsBorderThickness}"
                SnapsToDevicePixels="True">
                <DockPanel>
                    <ContentPresenter
                        x:Name="Icon"
                        Margin="5,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Path
                        x:Name="GlyphPanel"
                        Width="12"
                        Height="12"
                        Margin="5,0"
                        Data="{StaticResource Checkmark}"
                        Fill="{TemplateBinding Foreground}"
                        FlowDirection="LeftToRight"
                        Stretch="Uniform"
                        Visibility="Hidden" />
                    <ContentPresenter
                        Margin="5,0"
                        ContentSource="Header"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock
                        Margin="5,0"
                        Text="{TemplateBinding InputGestureText}"
                        Visibility="Collapsed" />
                    <Path
                        Width="12"
                        Height="12"
                        Margin="5,0"
                        VerticalAlignment="Center"
                        Data="{StaticResource DownArrowGeometry}"
                        RenderTransformOrigin="0.5,0.5"
                        Stretch="Uniform"
                        Stroke="{TemplateBinding Foreground}">
                        <Path.RenderTransform>
                            <RotateTransform Angle="-90" />
                        </Path.RenderTransform>
                    </Path>
                </DockPanel>
            </Border>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Focusable="false"
                HorizontalOffset="-2"
                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Right"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                VerticalOffset="-3">
                <Border x:Name="Shdw" Style="{StaticResource PopUpMenuBorderStyle}">
                    <ContentControl
                        x:Name="SubGroupBoxOuterBorder"
                        IsTabStop="false"
                        Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent,
                                                                         TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ScrollViewer CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter
                                Margin="2"
                                Grid.IsSharedSizeScope="true"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                KeyboardNavigation.TabNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </ContentControl>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter TargetName="Icon" Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter Property="Background" Value="{StaticResource SubMenuOpenMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource SubMenuOpenMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource SubMenuOpenMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter TargetName="Icon" Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid>
            <Border
                x:Name="OuterBorder"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{StaticResource ControlsBorderThickness}"
                SnapsToDevicePixels="True">
                <DockPanel>
                    <ContentPresenter
                        x:Name="Icon"
                        Margin="5,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon"
                        OpacityMask="{x:Null}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Path
                        x:Name="GlyphPanel"
                        Width="12"
                        Height="12"
                        Margin="5,0"
                        Data="{StaticResource Checkmark}"
                        Fill="{StaticResource ButtonForeground}"
                        FlowDirection="LeftToRight"
                        Stretch="Uniform"
                        Visibility="Hidden" />
                    <ContentPresenter
                        Margin="5,0"
                        ContentSource="Header"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock Margin="5,0" Text="{TemplateBinding InputGestureText}" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource HoverMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource HoverMenuItemForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter TargetName="Icon" Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledMenuItemBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledMenuItemBorder}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledMenuItemForeground}" />
                <Setter TargetName="Icon" Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultMenuItem" TargetType="MenuItem">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="FontSize" Value="{StaticResource ControlsFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource ControlsFontWeight}" />
        <Setter Property="FontFamily" Value="{StaticResource ControlsFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource MenuItemForeground}" />
        <Setter Property="Background" Value="{StaticResource MenuItemBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource MenuItemBorder}" />
        <Setter Property="Padding" Value="{StaticResource ControlsPadding}" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem" />
        </Style.Triggers>
    </Style>

    <Style
        x:Key="{x:Type MenuItem}"
        BasedOn="{StaticResource DefaultMenuItem}"
        TargetType="MenuItem" />

    <Style
        x:Key="{x:Static ToolBar.MenuStyleKey}"
        BasedOn="{StaticResource DefaultMenu}"
        TargetType="Menu">
        <Setter Property="FontSize" Value="{StaticResource ControlsFontSizeSmall}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Resources>
            <Style BasedOn="{StaticResource DefaultMenuItem}" TargetType="MenuItem" />
        </Style.Resources>
    </Style>



</ResourceDictionary>
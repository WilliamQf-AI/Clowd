<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="15,0,0,0"
                            Stroke="#60000000"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ControlsFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource ControlsFontWeight}" />
        <Setter Property="FontFamily" Value="{StaticResource ControlsFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButtonBorder}" />
        <Setter Property="Background" Value="{StaticResource RadioButtonBackground}" />
        <Setter Property="Margin" Value="{StaticResource ControlsMargin}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Ellipse
                                x:Name="Holder"
                                Width="20"
                                Height="20"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{StaticResource ControlsBorderThicknessDouble}" />
                            <Ellipse
                                x:Name="CheckMark"
                                Width="10"
                                Height="10"
                                Margin="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                Visibility="Collapsed" />

                        </Grid>

                        <ContentPresenter
                            Grid.Column="1"
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource RadioButtonCheckedBorder}" />
                            <Setter Property="Background" Value="{StaticResource RadioButtonCheckedBackground}" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverRadioButtonBorder}" />
                            <Setter Property="Background" Value="{StaticResource HoverRadioButtonBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Holder" Property="Fill" Value="{StaticResource DisabledCheckBoxBoxBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledCheckBoxBoxBorder}" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledCheckBoxBoxBorder}" />
                            <Setter Property="Background" Value="{StaticResource DisabledCheckBoxBoxBackground}" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource DisabledCheckBoxSignColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverRadioButtonCheckedBorder}" />
                            <Setter Property="Background" Value="{StaticResource HoverRadioButtonCheckedBackground}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type RadioButton}"
        BasedOn="{StaticResource DefaultRadioButton}"
        TargetType="{x:Type RadioButton}" />

    <Style
        x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
        BasedOn="{StaticResource DefaultRadioButton}"
        TargetType="RadioButton">
        <Setter Property="FontSize" Value="{StaticResource ControlsFontSizeSmall}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Grid Margin="4,0,0,0" VerticalAlignment="Center">
                            <Ellipse
                                x:Name="Holder"
                                Width="12"
                                Height="12"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="1" />
                            <Ellipse
                                x:Name="CheckMark"
                                Width="10"
                                Height="10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                Visibility="Collapsed" />
                        </Grid>

                        <ContentPresenter
                            Grid.Column="1"
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonForeground}" />
                            <Setter Property="Background" Value="{StaticResource RadioButtonCheckedBorder}" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverRadioButtonBorder}" />
                            <Setter Property="Background" Value="{StaticResource HoverRadioButtonBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Holder" Property="Fill" Value="{StaticResource DisabledCheckBoxBoxBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledCheckBoxBoxBorder}" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledCheckBoxBoxBorder}" />
                            <Setter Property="Background" Value="{StaticResource DisabledCheckBoxBoxBackground}" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource DisabledCheckBoxSignColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverRadioButtonCheckedBorder}" />
                            <Setter Property="Background" Value="{StaticResource HoverRadioButtonCheckedBackground}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>